git init                                           ساخت respository
---
git status                                     نشان دادن وضعیت فایل ها   
---
git add                                          بردن فایل ها به مرحله stage
---
git commit                                  ذخیره کردن در فایل git 
* git commit -A                           در برگیرنده همه فایل ها
* git commit -m  "اسم دلخواه"  
---
git log                                         جزئیات همه ی commit هارو نشون بده
---
git diff HEAD  / git log -P          آخرین فایلی که داریم روش کار میکنیم و تغیراتی که در آن داده ایم را به ما نشان می دهد
---
git diff --staged                        نشون بده در مرحله stage چه فایل هایی رو تغیر دادم
---
‎******************************** git diff HEAD / git diff --stage *******************************
وقتی این دستورات رو میزنیم احتمال دارد دستورات کار نکند در این صورت باید دکمه 
Q 
را بزنیم
----
git reset FileName                اگر از تغیراتی که در فایل داده ایم خوشمون نیومده باشه و بخواییم عوضشون کنیم با این دستور از                                                      مرحله stage بیرون میاریمشون
---
git checkout --                         و اگر کلا پشیمون بشیم و بخواییم تغیرات رو لغو کنیم و برگردونیم به مرحله اول 
git checkout -- .                       از این دستورات استفاده میکنیم (نقطه به معنای همه ی فایل ها میباشد)         
---
--------------------------------------------------------------------- تغیر شاخه
git branch                             با این دستور شاخمون رو بهمون نشون میده اونم شاخه *master
---
git branch BRANCHNAME                  با این دستور میتونیم شاخه جدیدی تعریف کنیم
---
git checkout BRANCHNAME         با این دستور هر چی تو شاخه اصلی هست رو این شاخه ای که ما تعریف کردیم هم پیاده میشه
---
git checkout master                        برگشتن به شاخه اصلی
--- 
git merge BRANCHNAME                با این دستور تغیراتی که در شاخه خودمون اضافه کردیم رو میتونیم به شاخه اصلی ادغام کنیم
---
git branch -d BRANCHNAME        حذف کردن شاخه هایی که خودمون ایجاد کردیم بعد از ادغام کردن چون اگه بمونه بعد از چند                                                               وقت تعدادشون خیلی زیاد میشه
---
git push origin master               زمانی که از گیت هاب فایلی دانلود میکنیم در واقع origin/master ما میشه و با این دستود وارد                                                         گیت هاب خودمون میکنیم
                                                     که بعدش username , password میخواد که باید واردش کنیم
---
git pull origin master               اگر بخواییم پروژه ی edit شده رو از repository origin بکشیم بیرون از دستور زیر استفاده میکنیم
---
git remote add origin githubaddress    اگه کارفرما بهمون یه آدرس بده و بگه remote کنین رو این آدرس از این دستور استفاده میکنیم
---
git push -u origin master            بعد اگر خواستیم تغیرات رو اضافه کنیم رو این آدرس به این صورت عمل کنیم

-----------------------------------------------------------------------
git touch filename                       با این دستور میتونیم فایل جدید تعریف کنیم 
---
git rm filename                           دستور حذف فایل
---
git clone URL                              دستور استخراج فایل از github
--- 
--------------------------------------------------------------------------ورژن بندی فایل ها 
git tag -a v2.0                        ورژن بندی
---
git tag -a v2.0 commit-part       بعدش git log میگیریم قسمتی از کد commit که میخواییم رو ورمیداریم و به این صورت وارد ورژن میکنیم
---
git show v2.0                               به این صورت اون ورژن رو فراخوانی میکنیم و نمایش میدهیم
---
git push origin v2.0                  طریقه اضافه کردن به این ورژن
----
git tag                                        همه ی تگ هارو نشون میده
---
git tag -a v2.0 -m 'create a version'
---
-----------------------------------------------------------------------------                      PGP -pretty good private 
معروف به رمز نگاری دیجیتال 
-----------------------------------------------------------------------------                       ساخت کلید برای نرم افزار 
gpg --list-keys                             کلید هارو بهمون نشون میده
---
gpg --gen-key                             کلید درست کن
---
gpg --list-secret-keys--keyid-formatLONG                           کلید های مخفی رو نشون بده
---
git config --global user.signinkey رمز بعد اسلش
رمز  sec را بعد از یک اسلش ورمیداریم و اینجا paste میکنیم و میگیم از این به بعد از این استفاده کن
---
git tag -s -v2.1 -m 'this me who is realeasing version'                       اینو sign کن به ورژن جدید
---
git commit -S -m 'new file is here'                       کامیت هارم میتونیم به این صورت امضا کنیم به این صورت
---
git blame                       debbug کردن به وسیله گیت
git blame Help                        
---
------------------------------------------------------------- آپلود پروژه روی گیت هاب
git remote add origin myRepositoryName               مشخص کردن این که کجا آپلود شه
git push origin master                                                 دستور آپلود کردن روی گیت هاب








